// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type LoginGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/login_controller.ts').default['render'], false>
}
type LoginPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/auth/controllers/login_controller.ts').default['validator']>>
  response: MakeTuyauResponse<import('../app/auth/controllers/login_controller.ts').default['handle'], true>
}
type RegisterGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/register_controller.ts').default['render'], false>
}
type RegisterPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/auth/controllers/register_controller.ts').default['validator']>>
  response: MakeTuyauResponse<import('../app/auth/controllers/register_controller.ts').default['handle'], true>
}
type GoogleRedirectGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/google_login_controller.ts').default['redirect'], false>
}
type GoogleCallbackGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/google_login_controller.ts').default['handle'], false>
}
type PasswordForgotGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/forgot_password_controller.ts').default['render'], false>
}
type PasswordForgotPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/auth/controllers/forgot_password_controller.ts').default['sendEmailValidator']>>
  response: MakeTuyauResponse<import('../app/auth/controllers/forgot_password_controller.ts').default['handle'], true>
}
type PasswordResetIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/reset_password_controller.ts').default['render'], false>
}
type PasswordResetPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/auth/controllers/reset_password_controller.ts').default['sendEmailValidator']>>
  response: MakeTuyauResponse<import('../app/auth/controllers/reset_password_controller.ts').default['handle'], true>
}
type AccountIdValidateGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/validate_account_controller.ts').default['handle'], false>
}
type LogoutPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/auth/controllers/logout_controller.ts').default['handle'], false>
}
type DashboardGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/admin/dashboard/controllers/dashboard_controller.ts').default['render'], false>
}
type NotificationsPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/notifications/controllers/notifications_controller.ts').default['sendNotif'], false>
}
type NotificationsIdPatch = {
  request: unknown
  response: MakeTuyauResponse<import('../app/notifications/controllers/notifications_controller.ts').default['markAsRead'], false>
}
type NotificationsIdDelete = {
  request: unknown
  response: MakeTuyauResponse<import('../app/notifications/controllers/notifications_controller.ts').default['delete'], false>
}
type MeDetailsGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/me/controllers/me_details_controller.ts').default['render'], false>
}
type MeDetailsPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/me/controllers/me_details_controller.ts').default['validator']>>
  response: MakeTuyauResponse<import('../app/me/controllers/me_details_controller.ts').default['handle'], true>
}
type MeSecurityGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/me/controllers/me_security_controller.ts').default['render'], false>
}
type MeSecurityPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/me/controllers/me_security_controller.ts').default['validator']>>
  response: MakeTuyauResponse<import('../app/me/controllers/me_security_controller.ts').default['handle'], true>
}
type MeConnectionsGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/me/controllers/me_connections_controller.ts').default['render'], false>
}
type MeThemePut = {
  request: unknown
  response: MakeTuyauResponse<import('../app/me/controllers/me_change_theme_controller.ts').default['handle'], false>
}
export interface ApiDefinition {
  'login': {
    '$url': {
    };
    '$get': LoginGetHead;
    '$head': LoginGetHead;
    '$post': LoginPost;
  };
  'register': {
    '$url': {
    };
    '$get': RegisterGetHead;
    '$head': RegisterGetHead;
    '$post': RegisterPost;
  };
  'google': {
    'redirect': {
      '$url': {
      };
      '$get': GoogleRedirectGetHead;
      '$head': GoogleRedirectGetHead;
    };
    'callback': {
      '$url': {
      };
      '$get': GoogleCallbackGetHead;
      '$head': GoogleCallbackGetHead;
    };
  };
  'password': {
    'forgot': {
      '$url': {
      };
      '$get': PasswordForgotGetHead;
      '$head': PasswordForgotGetHead;
      '$post': PasswordForgotPost;
    };
    'reset': {
      ':id': {
        '$url': {
        };
        '$get': PasswordResetIdGetHead;
        '$head': PasswordResetIdGetHead;
      };
      '$url': {
      };
      '$post': PasswordResetPost;
    };
  };
  'account': {
    ':id': {
      'validate': {
        '$url': {
        };
        '$get': AccountIdValidateGetHead;
        '$head': AccountIdValidateGetHead;
      };
    };
  };
  'logout': {
    '$url': {
    };
    '$post': LogoutPost;
  };
  'dashboard': {
    '$url': {
    };
    '$get': DashboardGetHead;
    '$head': DashboardGetHead;
  };
  'notifications': {
    '$url': {
    };
    '$post': NotificationsPost;
    ':id': {
      '$url': {
      };
      '$patch': NotificationsIdPatch;
      '$delete': NotificationsIdDelete;
    };
  };
  'me': {
    'details': {
      '$url': {
      };
      '$get': MeDetailsGetHead;
      '$head': MeDetailsGetHead;
      '$post': MeDetailsPost;
    };
    'security': {
      '$url': {
      };
      '$get': MeSecurityGetHead;
      '$head': MeSecurityGetHead;
      '$post': MeSecurityPost;
    };
    'connections': {
      '$url': {
      };
      '$get': MeConnectionsGetHead;
      '$head': MeConnectionsGetHead;
    };
    'theme': {
      '$url': {
      };
      '$put': MeThemePut;
    };
  };
}
const routes = [
  {
    params: [],
    name: 'home.index',
    path: '/',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
  {
    params: [],
    name: 'login.index',
    path: '/login',
    method: ["GET","HEAD"],
    types: {} as LoginGetHead,
  },
  {
    params: [],
    name: 'login.handle',
    path: '/login',
    method: ["POST"],
    types: {} as LoginPost,
  },
  {
    params: [],
    name: 'register.index',
    path: '/register',
    method: ["GET","HEAD"],
    types: {} as RegisterGetHead,
  },
  {
    params: [],
    name: 'register.handle',
    path: '/register',
    method: ["POST"],
    types: {} as RegisterPost,
  },
  {
    params: [],
    name: 'google.login.index',
    path: '/google/redirect',
    method: ["GET","HEAD"],
    types: {} as GoogleRedirectGetHead,
  },
  {
    params: [],
    name: 'google.login.handle',
    path: '/google/callback',
    method: ["GET","HEAD"],
    types: {} as GoogleCallbackGetHead,
  },
  {
    params: [],
    name: 'forgot-password.index',
    path: '/password/forgot',
    method: ["GET","HEAD"],
    types: {} as PasswordForgotGetHead,
  },
  {
    params: [],
    name: 'forgot-password.handle',
    path: '/password/forgot',
    method: ["POST"],
    types: {} as PasswordForgotPost,
  },
  {
    params: ["id"],
    name: 'reset-password.index',
    path: '/password/reset/:id',
    method: ["GET","HEAD"],
    types: {} as PasswordResetIdGetHead,
  },
  {
    params: [],
    name: 'reset-password.handle',
    path: '/password/reset',
    method: ["POST"],
    types: {} as PasswordResetPost,
  },
  {
    params: ["id"],
    name: 'validate-account.index',
    path: '/account/:id/validate',
    method: ["GET","HEAD"],
    types: {} as AccountIdValidateGetHead,
  },
  {
    params: [],
    name: 'logout.handle',
    path: '/logout',
    method: ["POST"],
    types: {} as LogoutPost,
  },
  {
    params: [],
    name: 'dashboard.index',
    path: '/dashboard',
    method: ["GET","HEAD"],
    types: {} as DashboardGetHead,
  },
  {
    params: [],
    name: 'notif',
    path: '/notifications',
    method: ["POST"],
    types: {} as NotificationsPost,
  },
  {
    params: ["id"],
    name: 'notif.read',
    path: '/notifications/:id',
    method: ["PATCH"],
    types: {} as NotificationsIdPatch,
  },
  {
    params: ["id"],
    name: 'notif.delete',
    path: '/notifications/:id',
    method: ["DELETE"],
    types: {} as NotificationsIdDelete,
  },
  {
    params: [],
    name: 'me.details.render',
    path: '/me/details',
    method: ["GET","HEAD"],
    types: {} as MeDetailsGetHead,
  },
  {
    params: [],
    name: 'me.details.handle',
    path: '/me/details',
    method: ["POST"],
    types: {} as MeDetailsPost,
  },
  {
    params: [],
    name: 'me.security.render',
    path: '/me/security',
    method: ["GET","HEAD"],
    types: {} as MeSecurityGetHead,
  },
  {
    params: [],
    name: 'me.security.handle',
    path: '/me/security',
    method: ["POST"],
    types: {} as MeSecurityPost,
  },
  {
    params: [],
    name: 'me.connections.render',
    path: '/me/connections',
    method: ["GET","HEAD"],
    types: {} as MeConnectionsGetHead,
  },
  {
    params: [],
    name: 'me.theme',
    path: '/me/theme',
    method: ["PUT"],
    types: {} as MeThemePut,
  },
  {
    params: [],
    name: 'about.index',
    path: '/about',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
declare module '@tuyau/inertia/types' {
  type InertiaApi = typeof api
  export interface Api extends InertiaApi {}
}
