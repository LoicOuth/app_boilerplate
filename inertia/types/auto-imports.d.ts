/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const Alert: typeof import('../components/shared/ui/alert/index')['Alert']
  const AlertDescription: typeof import('../components/shared/ui/alert/index')['AlertDescription']
  const AlertDialog: typeof import('../components/shared/ui/alert-dialog/index')['AlertDialog']
  const AlertDialogAction: typeof import('../components/shared/ui/alert-dialog/index')['AlertDialogAction']
  const AlertDialogCancel: typeof import('../components/shared/ui/alert-dialog/index')['AlertDialogCancel']
  const AlertDialogContent: typeof import('../components/shared/ui/alert-dialog/index')['AlertDialogContent']
  const AlertDialogDescription: typeof import('../components/shared/ui/alert-dialog/index')['AlertDialogDescription']
  const AlertDialogFooter: typeof import('../components/shared/ui/alert-dialog/index')['AlertDialogFooter']
  const AlertDialogHeader: typeof import('../components/shared/ui/alert-dialog/index')['AlertDialogHeader']
  const AlertDialogTitle: typeof import('../components/shared/ui/alert-dialog/index')['AlertDialogTitle']
  const AlertDialogTrigger: typeof import('../components/shared/ui/alert-dialog/index')['AlertDialogTrigger']
  const AlertTitle: typeof import('../components/shared/ui/alert/index')['AlertTitle']
  const Avatar: typeof import('../components/shared/ui/avatar/index')['Avatar']
  const AvatarFallback: typeof import('../components/shared/ui/avatar/index')['AvatarFallback']
  const AvatarImage: typeof import('../components/shared/ui/avatar/index')['AvatarImage']
  const Breadcrumb: typeof import('../components/shared/ui/breadcrumb/index')['Breadcrumb']
  const BreadcrumbEllipsis: typeof import('../components/shared/ui/breadcrumb/index')['BreadcrumbEllipsis']
  const BreadcrumbItem: typeof import('../components/shared/ui/breadcrumb/index')['BreadcrumbItem']
  const BreadcrumbLink: typeof import('../components/shared/ui/breadcrumb/index')['BreadcrumbLink']
  const BreadcrumbList: typeof import('../components/shared/ui/breadcrumb/index')['BreadcrumbList']
  const BreadcrumbPage: typeof import('../components/shared/ui/breadcrumb/index')['BreadcrumbPage']
  const BreadcrumbSeparator: typeof import('../components/shared/ui/breadcrumb/index')['BreadcrumbSeparator']
  const Button: typeof import('../components/shared/ui/button/index')['Button']
  const Card: typeof import('../components/shared/ui/card/index')['Card']
  const CardContent: typeof import('../components/shared/ui/card/index')['CardContent']
  const CardDescription: typeof import('../components/shared/ui/card/index')['CardDescription']
  const CardFooter: typeof import('../components/shared/ui/card/index')['CardFooter']
  const CardHeader: typeof import('../components/shared/ui/card/index')['CardHeader']
  const CardTitle: typeof import('../components/shared/ui/card/index')['CardTitle']
  const DropdownMenu: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenu']
  const DropdownMenuCheckboxItem: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuCheckboxItem']
  const DropdownMenuContent: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuContent']
  const DropdownMenuGroup: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuGroup']
  const DropdownMenuItem: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuItem']
  const DropdownMenuLabel: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuLabel']
  const DropdownMenuPortal: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuPortal']
  const DropdownMenuRadioGroup: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuRadioGroup']
  const DropdownMenuRadioItem: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuRadioItem']
  const DropdownMenuSeparator: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuSeparator']
  const DropdownMenuShortcut: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuShortcut']
  const DropdownMenuSub: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuSub']
  const DropdownMenuSubContent: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuSubContent']
  const DropdownMenuSubTrigger: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuSubTrigger']
  const DropdownMenuTrigger: typeof import('../components/shared/ui/dropdown-menu/index')['DropdownMenuTrigger']
  const EffectScope: typeof import('vue')['EffectScope']
  const Head: typeof import('@inertiajs/vue3')['Head']
  const Input: typeof import('../components/shared/ui/input/index')['Input']
  const Label: typeof import('../components/shared/ui/label/index')['Label']
  const Link: typeof import('@inertiajs/vue3')['Link']
  const Separator: typeof import('../components/shared/ui/separator/index')['Separator']
  const Sheet: typeof import('../components/shared/ui/sheet/index')['Sheet']
  const SheetClose: typeof import('../components/shared/ui/sheet/index')['SheetClose']
  const SheetContent: typeof import('../components/shared/ui/sheet/index')['SheetContent']
  const SheetDescription: typeof import('../components/shared/ui/sheet/index')['SheetDescription']
  const SheetFooter: typeof import('../components/shared/ui/sheet/index')['SheetFooter']
  const SheetHeader: typeof import('../components/shared/ui/sheet/index')['SheetHeader']
  const SheetTitle: typeof import('../components/shared/ui/sheet/index')['SheetTitle']
  const SheetTrigger: typeof import('../components/shared/ui/sheet/index')['SheetTrigger']
  const Tabs: typeof import('../components/shared/ui/tabs/index')['Tabs']
  const TabsContent: typeof import('../components/shared/ui/tabs/index')['TabsContent']
  const TabsList: typeof import('../components/shared/ui/tabs/index')['TabsList']
  const TabsTrigger: typeof import('../components/shared/ui/tabs/index')['TabsTrigger']
  const Toaster: typeof import('../components/shared/ui/sonner/index')['Toaster']
  const Tooltip: typeof import('../components/shared/ui/tooltip/index')['Tooltip']
  const TooltipContent: typeof import('../components/shared/ui/tooltip/index')['TooltipContent']
  const TooltipProvider: typeof import('../components/shared/ui/tooltip/index')['TooltipProvider']
  const TooltipTrigger: typeof import('../components/shared/ui/tooltip/index')['TooltipTrigger']
  const alertVariants: typeof import('../components/shared/ui/alert/index')['alertVariants']
  const avatarVariant: typeof import('../components/shared/ui/avatar/index')['avatarVariant']
  const buttonVariants: typeof import('../components/shared/ui/button/index')['buttonVariants']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const router: typeof import('@inertiajs/vue3')['router']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const sheetVariants: typeof import('../components/shared/ui/sheet/index')['sheetVariants']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useForm: typeof import('@inertiajs/vue3')['useForm']
  const useI18n: typeof import('vue-i18n')['useI18n']
  const usePage: typeof import('@inertiajs/vue3')['usePage']
  const useProfileBreadcrumb: typeof import('../composables/use_breadcrumb')['useProfileBreadcrumb']
  const useScreenMediaQuery: typeof import('../composables/use_screen_media_query')['useScreenMediaQuery']
  const useSlots: typeof import('vue')['useSlots']
  const useUser: typeof import('../composables/use_user')['useUser']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly router: UnwrapRef<typeof import('@inertiajs/vue3')['router']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useForm: UnwrapRef<typeof import('@inertiajs/vue3')['useForm']>
    readonly useI18n: UnwrapRef<typeof import('vue-i18n')['useI18n']>
    readonly usePage: UnwrapRef<typeof import('@inertiajs/vue3')['usePage']>
    readonly useProfileBreadcrumb: UnwrapRef<typeof import('../composables/use_breadcrumb')['useProfileBreadcrumb']>
    readonly useScreenMediaQuery: UnwrapRef<typeof import('../composables/use_screen_media_query')['useScreenMediaQuery']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useUser: UnwrapRef<typeof import('../composables/use_user')['useUser']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
